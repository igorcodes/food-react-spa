{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","config.js","api.js","components/Preloader.jsx","components/CategoryItem.jsx","components/CategoryList.jsx","components/Search.jsx","pages/Home.jsx","pages/About.jsx","pages/Contact.jsx","components/Meal.jsx","components/MealList.jsx","pages/Category.jsx","pages/NotFound.jsx","pages/GordonRamsayRecipe.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","id","Footer","Date","getFullYear","href","API_URL","getMealById","mealId","a","fetch","response","json","getAllCategories","getFilteredCategory","catName","Preloader","params","CategoryItem","props","strCategory","strCategoryThumb","strCategoryDescription","src","alt","slice","CategoryList","catalog","map","el","idCategory","Search","cb","Function","prototype","useState","value","setValue","handleSubmit","type","placeholder","onKeyDown","e","key","onChange","target","style","position","top","right","onClick","Home","setCatalog","filteredCatalog","setFilteredCatalog","useLocation","pathname","search","push","useHistory","useEffect","then","data","categories","filter","item","toLowerCase","includes","split","str","length","About","Contact","Meal","strMeal","idMeal","strMealThumb","MealList","meals","meal","Category","name","useParams","setMeals","goBack","NotFound","GordonRamsayRecipe","recipe","setRecipe","strArea","strInstructions","Object","keys","strYoutube","margin","title","allowfullscreen","App","basename","exact","path","component","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fb352e1.chunk.js","sourcesContent":["import {Link} from 'react-router-dom'\r\n//Link компонент который позволяет обновлять без перезагрузки\r\n\r\nfunction Header() {\r\n    // https://materializecss.com/navbar.html\r\n    return <nav className='green'>\r\n    <div className=\"nav-wrapper\">\r\n      <Link to=\"/\" className=\"brand-logo\">React SPA  \"World food recipes\"</Link>\r\n      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n        \r\n        <li>\r\n            <Link to=\"/about\">\r\n            About\r\n            </Link>\r\n        </li>\r\n\r\n        <li>\r\n            <Link to=\"/contacts\">\r\n            Contacts\r\n            </Link>\r\n        </li>\r\n\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n}\r\n\r\nexport {Header}","function Footer() {\r\n    return <footer className=\"page-footer  blue-grey darken-4\">\r\n          \r\n          <div className=\"footer-copyright\">\r\n            <div className=\"container\">\r\n            © {new Date().getFullYear()} Copyright Text\r\n            <a className=\"grey-text text-lighten-4 right\" href=\"#!\">Repo</a>\r\n            </div>\r\n          </div>\r\n\r\n        </footer>\r\n}\r\n\r\nexport {Footer}\r\n\r\n\r\n","const API_KEY = '1';\r\n\r\nconst API_URL = `https://www.themealdb.com/api/json/v1/${API_KEY}/`;\r\n\r\nexport { API_URL };","import {API_URL} from './config'\r\n\r\n// поиск по id, в запрос фетч вбиваем www.themealdb.com/api/json/v1/1/lookup.php?i= плюс mealId\r\n// функция асинхронная и не будет блокировать работу приложения\r\nconst getMealById = async (mealId) => {\r\n    const response = await fetch(API_URL + 'lookup.php?i=' + mealId);\r\n    return await response.json();\r\n}\r\n\r\n\r\n/* const getMealById = (mealId) => {\r\n    fetch(API_URL + 'lookup.php?i=' + mealId);\r\n} */\r\n\r\nconst getAllCategories = async () => {\r\n    const response = await fetch(API_URL + 'categories.php');\r\n    return await response.json();\r\n}\r\n\r\nconst getFilteredCategory  = async (catName) => {\r\n    const response = await fetch(API_URL + 'filter.php?c=' + catName);\r\n    return await response.json();\r\n}\r\n\r\nexport { getMealById, getAllCategories, getFilteredCategory }\r\n","function Preloader(params) {\r\n    return <div className=\"preloader-wrapper active\">\r\n    <div className=\"spinner-layer spinner-red-only\">\r\n      <div className=\"circle-clipper left\">\r\n        <div className=\"circle\"></div>\r\n      </div><div className=\"gap-patch\">\r\n        <div className=\"circle\"></div>\r\n      </div><div className=\"circle-clipper right\">\r\n        <div className=\"circle\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport {Preloader}","import {Link} from 'react-router-dom'\r\n\r\nfunction CategoryItem(props) { // принимает пропс каталог со значением по умолчанию пустой массив\r\n    const { strCategory, strCategoryThumb, strCategoryDescription } = props;\r\n    \r\n\r\n    // возвращаем див, внутри которого проходим каталог мапом, карточка с https://materializecss.com/cards.html\r\n        return <div className=\"card\">\r\n        <div className=\"card-image\">\r\n          <img src={strCategoryThumb} alt={strCategory} />\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">{strCategory}</span>\r\n          <p>{strCategoryDescription.slice(0, 220)}...</p>\r\n        </div>\r\n        <div className='card-action'>  {/* //передаем динамичесски ${strCategory} */}\r\n            <Link to={`/category/${strCategory}`} className='btn'>Watch category</Link>\r\n        </div>\r\n      </div>\r\n    }\r\n    \r\n    \r\n    export {CategoryItem}","import { CategoryItem } from './CategoryItem'\r\n\r\nfunction CategoryList({catalog = []}) { // принимает пропс каталог со значением по умолчанию пустой массив\r\n    \r\n\r\n// возвращаем див, внутри которого проходим каталог мапом\r\n    return (\r\n        <div className='list'> \r\n        {catalog.map((el) => (\r\n            <CategoryItem key={el.idCategory} {...el} />\r\n        ))}\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport {CategoryList}","import {useState} from 'react'\r\n\r\nfunction Search({cb = Function.prototype}) {\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleKey = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleSubmit();\r\n        }\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        cb(value); //высываем коллбек и передаем ему текущее значение велью\r\n    };\r\n\r\n    return <div className='row'>\r\n        <div className=\"input-field col s12\">\r\n            <input type='search'\r\n                id='search-field'\r\n                placeholder='search'\r\n                onKeyDown={handleKey}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                value={value}\r\n            />\r\n            <button className='btn' \r\n            style={{\r\n                position: 'absolute', \r\n                top: 0, \r\n                right: 0,\r\n            }}\r\n            onClick={handleSubmit}\r\n            >Search</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport {Search}","import {useState, useEffect} from 'react' // импортируем из реакта состояния\r\nimport {useLocation, useHistory} from 'react-router-dom'\r\nimport {getAllCategories} from '../api' // импортируем метод всех категорий\r\nimport {Preloader} from '../components/Preloader'\r\nimport {CategoryList} from '../components/CategoryList'\r\nimport {Search} from '../components/Search'\r\n\r\nfunction Home() {  \r\n    //каталог со всеми категориями и функция\r\n    const [catalog, setCatalog] = useState([]);\r\n    const [filteredCatalog, setFilteredCatalog] = useState([]);\r\n\r\n    const {pathname, search} = useLocation();\r\n    const {push} = useHistory();\r\n    // console.log(push);\r\n    // console.log(pathname, search)\r\n\r\n//фильтруем текущий каталог, берем каждый элемент каталога, обходим его \r\n//strCategory это строка с именем категории, смотрим включает ли она строку кот ввел пользователь\r\n    const handleSearch = (str) => {\r\n        setFilteredCatalog(\r\n            catalog.filter(item => item.strCategory.toLowerCase().includes(str.toLowerCase()))\r\n        );\r\n        push({ //для отображения переметров поиска в адресной строке браузера у нас будет склеиваться pathname и search\r\n            pathname, \r\n            search: `?search=${str}`, //должен добавиться гет параметр с ключом search к тому параметру который мы получим извне str\r\n        })\r\n    }\r\n\r\n//getAllCategories возвращает промис со всеми данными, и будем их сдесь обрабатывать\r\n    useEffect(() => {\r\n        getAllCategories().then(data => {\r\n            setCatalog(data.categories); // по ссылке api возвращает обьект categories - смортим в постман\r\n            setFilteredCatalog(search ? \r\n                data.categories.filter(item => \r\n                    item.strCategory\r\n                    .toLowerCase()\r\n                    .includes(search.split('=')[1].toLowerCase())\r\n                ) : data.categories\r\n            );\r\n        });\r\n        }, [search]);\r\n\r\n    // если каталог путой (!catalog.length) то прелоадер\r\n    // если не пустой то будет выдавать отдельный компонент <CategoryList/> и буду туда спускать весь каталог catalog={ catalog }\r\n    return (\r\n            <> \r\n            <Search cb={handleSearch} />\r\n            {!catalog.length ? <Preloader /> : (\r\n                <CategoryList catalog={ filteredCatalog }/> //в компонент CategoryList передаю весь каталог\r\n            )}\r\n            </>\r\n            );\r\n}\r\n\r\nexport {Home}","function About() {\r\n    return <h1>Hello, from About page</h1>\r\n}\r\n\r\nexport {About}","function Contact() {\r\n    return <h1>Hello, from Contact page</h1>\r\n}\r\n\r\nexport {Contact}","import {Link} from 'react-router-dom'\r\n//import {GordonRamsayRecipe} from '../pages/GordonRamsayRecipe'\r\n\r\nfunction Meal(props) { //в обьекте meals ключи strMeal, idMeal, strMealThumb\r\n    const {strMeal, idMeal, strMealThumb } = props;\r\n\r\n    // возвращает обьект отсортированные блюда\r\n    return <div className=\"card\"> \r\n    <div className=\"card-image\">\r\n      <img src={strMealThumb} alt={strMeal} />\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <span className=\"card-title\">{strMeal}</span>\r\n    </div>\r\n    <div className='card-action'>\r\n        <Link to={`/meal/${idMeal}`} className='btn'>Watch recipe</Link>\r\n    </div>\r\n  </div>\r\n\r\n}\r\n\r\nexport {Meal};","import {Meal} from './Meal'\r\n\r\nfunction MealList({meals}) { //принимает список блюд\r\n\r\n    return <div className='list'> {/* // обходит цикло через мап этот список */}\r\n        {meals.map((meal) => (\r\n            <Meal key={meal.idMeal} {...meal} />  //постман показывает ключ обьекта meal это idMeal\r\n        ))}\r\n    </div>\r\n}\r\n\r\nexport {MealList};","// создали страницу категория, в эту страницу категория мы импортировали функцию getFilteredCategory кот отвечает за получение конкретной одной категории (фильтрует категории)\r\n//мы загружаем список всех категорий устанавливаем их в стейт и спускаем их вниз\r\n// пока стейт пустой грузится прелоадер, когда он уже не пустой - загружаем туда список еды, в MealList он обходит его циклом через мап и выдает нам еду с картинокй и названием и кнопкой для перехода\r\n\r\n\r\nimport {useState, useEffect} from 'react' \r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport {getFilteredCategory} from '../api' // функция которая фильтрует категории\r\nimport {Preloader} from '../components/Preloader'\r\nimport {MealList} from '../components/MealList' // компонент список блюд\r\n\r\nfunction Category() {\r\n    const {name} = useParams(); //вынимаем имя из useParams\r\n\r\n//загружаем список всех категорий устанавливаем их в стейт и спускаем их вниз\r\n    const [meals, setMeals] = useState([]); // по ссылке с api нам приходит массив meals, поэтому нам нужен стейт\r\n    \r\n    const {goBack} = useHistory();\r\n\r\n    useEffect(() => { //единоразово при переходе на страницу будем фильтровать категорию передавая туда name\r\n        getFilteredCategory(name).then((data) => setMeals(data.meals)); // будем фильтровать категорию передавая туда имя\r\n    }, [name]);\r\n\r\n    return <>\r\n    <button className='btn' onClick={goBack}>Go Back</button>\r\n    {!meals.length ? <Preloader /> : <MealList meals={meals} />} \r\n    </>\r\n    \r\n}\r\n\r\nexport {Category}","function NotFound() {\r\n    return <h1>Not Found page</h1>\r\n}\r\n\r\nexport {NotFound}","import {useEffect, useState} from 'react'; // для функции getMealById\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport {getMealById} from '../api'; // функция которая умеет доставать данные по id\r\nimport {Preloader} from '../components/Preloader';\r\n\r\nfunction GordonRamsayRecipe() {\r\n    const [recipe, setRecipe] = useState({});\r\n    const {id} = useParams();\r\n    const {goBack} = useHistory();\r\n\r\n    useEffect(() => {\r\n//функция из api.jsx кот достает данные по id getMealById(id)\r\n//достаем данные по id при помощи функ getMealById, после этого вызовем setRecipe и отправить эти данные в стейт\r\n        getMealById(id).then((data) => setRecipe(data.meals[0])); //по ссылке api получим массив meals с данными, в setRecipe передадим данные этого обьекта\r\n    }, [id]); //useEffect должен срабатывать каждый раз когда id поменялся - новый параметр пришол и мы новый рецепт запросили\r\n\r\n    return (\r\n    <>\r\n    \r\n{/* // у recipe есть id, и мы проверяем что если этого id пока нету в recipe тогда возвращать прелоадер */}\r\n    {!recipe.idMeal ? ( <Preloader /> ) : (\r\n        <div className=\"recipe\"> {/* если idMeal есть то тут будет весь рецепт */}\r\n        <img src={recipe.strMealThumb} alt={recipe.strMeal} /> {/* с постмана беру ключи обьекта кот вернулся по запросу с api */}\r\n        <h1>{recipe.strMeal}</h1>\r\n        <h6>Category: {recipe.strCategory}</h6>\r\n        { recipe.strArea ? <h6>Area: {recipe.strArea}</h6> : null } {/* //strArea есть не всегда, поэтому проверяем - если есть то выдаем, если нету то null  */}\r\n        <p>{recipe.strInstructions}</p>\r\n\r\n        <table className='centered'>\r\n            <thead>\r\n                <tr>\r\n                    <th>Ingredient</th>\r\n                    <th>Measure</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {//нам нужно обойти все ключи с ингредиентами\r\n                  //object.keys(recipe) получает массив со всеми ключами обьекта \r\n                    Object.keys(recipe).map(key => {\r\n//проверяем что наш ключ включает в свое название слово ингредиент и что он не пустой\r\n                        if(key.includes('Ingredient') && recipe[key]) {\r\n                            return (\r\n                                <tr key={key}>\r\n                                    <td>{recipe[key]}</td> {/* название нашего ингредиента */}\r\n                                    <td>{\r\n            //нам приходит массив ингредиентов с номерами, выглядит так strIngredient9, \r\n            //номер будет тринадцатым символом елемента, нам нужно получить только этот номер, поэтому указываем позицию этой цифры \r\n                                    recipe[`strMeasure${key.slice(13)}`]\r\n                                    }</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n\r\n                        return null; //ничего не ресуй если ты не нашел ключ с надписью ингредиент\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>\r\n        \r\n        {recipe.strYoutube ? (\r\n\r\n            <div className='row'>\r\n                <h5 style={{margin: '2rem 0 1.5rem'}}>Video Recipe</h5>\r\n                <iframe \r\n                    title={id} \r\n                    src={`https://www.youtube.com/embed/${recipe.strYoutube.slice(-11)}`} \r\n                    allowfullscreen \r\n                />\r\n            </div>\r\n        \r\n        ) : null}\r\n        </div>\r\n    )}\r\n    <button className='btn' onClick={goBack}> Go Back </button>\r\n\r\n    </>\r\n    );\r\n    \r\n}\r\n\r\nexport {GordonRamsayRecipe};\r\n\r\n\r\n/* postman.co выдает массив meals с разными ключами\r\n\r\nпоэтому useEffect(() => {\r\n            getMealById(id).then(data.meals[0])\r\n        });\r\n\r\n\r\n\"meals\": [\r\n    {\r\n        \"idMeal\": \"52772\",\r\n        \"strMeal\": \"Teriyaki Chicken Casserole\",\r\n        \"strDrinkAlternate\": null,\r\n        \"strCategory\": \"Chicken\",\r\n        \"strArea\": \"Japanese\",\r\n        \"strInstructions\": \"Preheat oven to 350° F. Spray */","import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n//компонент наз BrowserRouter, но есть практика его называть как Router и мы его переименовуем и будем использовать как Router\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\n\nimport {Home} from './pages/Home';\nimport {About} from './pages/About';\nimport {Contact} from './pages/Contact';\nimport {Category} from './pages/Category';\nimport {NotFound} from './pages/NotFound';\nimport {GordonRamsayRecipe} from './pages/GordonRamsayRecipe'; // загружаем страницу\n\nfunction App() {\n  return (\n    <>\n      <Router basename='/food-react-spa'>\n      <Header />\n      <main className='container content'>\n{/* // слассы container и content тут будут разные странички */}\n{/* та часть которую мы хотим обернуть в многостраничность она должна быть обернута в роутер */}\n        <Switch> {/* Switch позволяет остановиться на одной странице которой подходит наш запрос и дальше просто не проверять */}\n        {/* Switch должен только роуты содержать внутри себя */}\n\n{/* path='/' - это путь по которому пользователи будут искать страницу и мы говорим что компонент который принадлежит этому пути называется component={} */} \n{/* вот мой отдельный компонент который отвечает за дом страницу */}\n        <Route exact path='/' > {/* exact - точный путь */}\n            <Home />\n        </Route>\n        <Route path='/about' component={About} />\n        <Route path='/contacts' component={Contact} />\n        <Route path='/category/:name' component={Category} />\n        <Route path='/meal/:id' component={GordonRamsayRecipe} /> {/* //создаем ей ссылку */}\n\n        {/* мы просто попадем в самый последний вариант и отрисуем нот фаунд  */}\n        <Route component={NotFound} /> {/* он отработает в том случае если ни один из верхних роутов не сработает */}\n\n        </Switch>\n      </main>\n      <Footer />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}